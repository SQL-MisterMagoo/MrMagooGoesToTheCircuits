@using Microsoft.AspNetCore.Components.Server.Circuits
@using GenFu
@inject CircuitHandler handler
<aside @attributes="@AdditionalAttributes">
	<label for="nickname">Nickname: </label><input id="nickname" style="width:5em;" maxlength="20" @bind="@UserName" @bind:event="oninput" />
</aside>	
@code
{
		[Parameter(CaptureUnmatchedValues = true)]
		public IReadOnlyDictionary<string, object> AdditionalAttributes { get; set; }
		string _userName;
		string UserName { get=>_userName; set { _userName = value; InvokeAsync(async () => await RegisterUser(value)); } }

		protected override void OnInitialized()
		{
			if (handler is TrackingCircuitHandler thandler && thandler.GetCircuit() is object)
			{
				var genfu = A.New<Person>();
				UserName = genfu.FirstName;
			}
		}

		async Task RegisterUser(string name)
		{
			if (!string.IsNullOrWhiteSpace(name))
			{
				if (handler is TrackingCircuitHandler thandler && thandler.GetCircuit() is object)
				{
					_ = await thandler.AddUser(name);
				}
			}
		}
		class Person
		{
			public string FirstName { get; set; }
		}
}
